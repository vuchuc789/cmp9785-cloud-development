name: Validate and Test
on:
  push:
    branches-ignore:
      - main
jobs:
  test-api:
    name: Test with Pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api/
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create .env file
        run: |
          cp .env.example .env
      - name: Test with pytest
        run: |
          pytest --cov=.
  test-app:
    name: Test with Jest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: Install dependencies
        run: |
          npm install
      - name: Create .env file
        run: |
          cp .env.example .env
      - name: Test with jest
        run: |
          npm run test
  validate-infra:
    name: Validate Terraform
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: "${{ secrets.GOOGLE_CREDENTIALS }}"
      TF_VAR_postgres_password: "${{ secrets.POSTGRES_PASSWORD }}"
      TF_VAR_auth_token_secret: "${{ secrets.AUTH_TOKEN_SECRET }}"
      TF_VAR_sendgrid_api_key: "${{ secrets.SENDGRID_API_KEY }}"
      TF_VAR_gemini_api_key: "${{ secrets.GEMINI_API_KEY }}"
      TF_VAR_service_account_key: "${{ secrets.GOOGLE_CREDENTIALS }}"
    defaults:
      run:
        working-directory: infra/terraform/
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform init
        run: terraform init -input=false
      - name: Terraform plan
        run: terraform plan -input=false
