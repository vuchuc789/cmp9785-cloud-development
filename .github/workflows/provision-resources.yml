name: Provision Resources
on:
  push:
    branches:
      - main
    paths:
      - infra/terraform/**
env:
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
jobs:
  validate-infra:
    name: Validate Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform/
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform init
        run: terraform init -input=false
      - name: Terraform plan
        run: terraform plan -input=false
  provision:
    name: Provision Resources
    runs-on: ubuntu-latest
    needs:
      - validate-infra
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform init
        run: terraform init -input=false
      - name: Terraform apply
        run: terraform apply -input=false -auto-approve
      - name: Get kubeconfig
        id: get-kubeconfig
        run: echo "kubeconfig=$(terraform output -raw kube_config | base64)" >> $GITHUB_OUTPUT
  deploy:
    name: Deploy Kubernetes Manifests
    runs-on: ubuntu-latest
    needs:
      - provision
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Create kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV
      - name: Apply Kubernetes manifests
        run: kubectl apply -k infra/argocd/
      - name: Clean up kubeconfig
        if: always()
        run: rm -f kubeconfig.yaml
